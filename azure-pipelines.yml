jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'
  - bash: brew update; brew install ninja;
    displayName: 'Install tools from Brew'
  - bash: ./build.sh -j 4 -p "$PWD/install" -i
    displayName: 'Build'
  - bash: pip install nipype
    displayName: 'Install nipype'
  - bash: pip install -e .
    displayName: 'Install QUIT Python'
    workingDirectory: Python
  - bash: export PATH="$PWD/../../install/bin:$PATH"; echo $PATH; python -m unittest discover
    displayName: 'Run Python Tests'
    workingDirectory: Python/Tests
  - bash: tar -cvzf $(Build.ArtifactStagingDirectory)/qi_mac.tgz qi
    displayName: 'Copy binary'
    workingDirectory: _build/Source
    condition: succeeded()
  - task: GithubRelease@0
    displayName: 'Create Mac GitHub Release'
    inputs:
      gitHubConnection: GitHub Spinicist
      action: 'edit'
      target: '$(Build.SourceVersion)'
      tagSource: 'git tag'
      repositoryName: 'spinicist/QUIT'
      releaseTitle: '$(Build.SourceBranchName)'
      assetUploadMode: 'replace'
      addChangeLog: false
- job: LinuxGCC
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'
  - bash: export CXX="g++-7"; ./build.sh -j 4 -p "$PWD/install" -i
    displayName: 'Build'
  - bash: pip install nipype
    displayName: 'Install nipype'
  - bash: pip install -e .
    displayName: 'Install QUIT Python'
    workingDirectory: Python
  - bash: export PATH="$PWD/../../install/bin:$PATH"; echo $PATH; python -m unittest discover
    displayName: 'Run Python Tests'
    workingDirectory: Python/Tests
  - bash: tar -cvzf $(Build.ArtifactStagingDirectory)/qi_linux.tgz qi
    displayName: 'Copy binary'
    workingDirectory: _build/Source
    condition: succeeded()
  - task: GithubRelease@0
    displayName: 'Create Linux GitHub Release'
    inputs:
      gitHubConnection: GitHub Spinicist
      action: 'edit'
      target: '$(Build.SourceVersion)'
      tagSource: 'git tag'
      repositoryName: 'spinicist/QUIT'
      releaseTitle: '$(Build.SourceBranchName)'
      assetUploadMode: 'replace'
      addChangeLog: false
