jobs:
- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'
  - bash: brew update; brew install ninja;
    displayName: 'Install tools from Brew'
  - bash: ./build.sh -j 4 -p "$PWD/install" -i
    displayName: 'Build'
  - bash: pip install nipype
    displayName: 'Install nipype'
  - bash: pip install -e .
    displayName: 'Install QUIT Python'
    workingDirectory: Python
  - bash: export PATH="$PWD/../../install/bin:$PATH"; echo $PATH; python -m unittest discover
    displayName: 'Run Python Tests'
    workingDirectory: Python/Tests
  - bash: mkdir $(Build.ArtifactStagingDirectory)/mac; cp qi $(Build.ArtifactStagingDirectory)/mac/
    displayName: 'Copy binary'
    workingDirectory: build/Source
    condition: succeeded()
- job: LinuxGCC
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'
  - bash: export CXX="g++-7"; ./build.sh -j 4 -p "$PWD/install" -i
    displayName: 'Build'
  - bash: pip install nipype
    displayName: 'Install nipype'
  - bash: pip install -e .
    displayName: 'Install QUIT Python'
    workingDirectory: Python
  - bash: export PATH="$PWD/../../install/bin:$PATH"; echo $PATH; python -m unittest discover
    displayName: 'Run Python Tests'
    workingDirectory: Python/Tests
  - task: GithubRelease@0
    displayName: 'Create GitHub Release for Linux'
    inputs:
      action: Create
      gitHubConnection: GitHub Spinicist
      repositoryName: spinicist/QUIT
      releaseTitle: $(Build.SourceBranchName)
      assets: $(Build.Repository.LocalPath)/_build/Source/qi
  - bash: mkdir $(Build.ArtifactStagingDirectory)/linux; cp qi $(Build.ArtifactStagingDirectory)/linux/
    displayName: 'Copy binary'
    workingDirectory: build/Source
    condition: succeeded()
- job: Release
  pool:
    vmImage: 'ubuntu-18.04'
  condition: succeeded()
  dependsOn:
    - macOS
    - LinuxGCC
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      path: '$(System.ArtifactsDirectory)'
  - task: GithubRelease@0
    displayName: 'Create GitHub Release'
    inputs:
      gitHubConnection: GitHub Spinicist
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'auto'
      tag: '$(Build.SourceBranchName)'
      repositoryName: 'spinicist/QUIT'
      releaseTitle: '$(Build.SourceBranchName)'
      assets: '$(System.ArtifactsDirectory)/*/qi'
