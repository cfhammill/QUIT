import unittest
from nipype.interfaces.base import CommandLine
from QUIT.interfaces.core import NewImage, Diff
from QUIT.interfaces.relax import Multiecho, MultiechoSim, MUPA, MUPASim, MUPAMT, MUPAMTSim

vb = True
CommandLine.terminal_output = 'allatonce'


class Relax(unittest.TestCase):
    def test_multiecho(self):
        me = {'MultiEcho': {'TR': 10, 'TE1': 0.01, 'ESP': 0.01,
                            'ETL': 5}}
        me_file = 'sim_me.nii.gz'
        img_sz = [32, 32, 32]
        noise = 0.001

        NewImage(img_size=img_sz, grad_dim=0, grad_vals=(0.8, 1.0),
                 out_file='PD.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=2, grad_vals=(0.04, 0.1),
                 out_file='T2.nii.gz', verbose=vb).run()

        MultiechoSim(sequence=me, in_file=me_file,
                     PD='PD.nii.gz', T2='T2.nii.gz',
                     noise=noise, verbose=vb).run()
        Multiecho(sequence=me, in_file=me_file, verbose=vb).run()

        diff_T2 = Diff(in_file='ME_T2.nii.gz', baseline='T2.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_PD = Diff(in_file='ME_PD.nii.gz', baseline='PD.nii.gz',
                       noise=noise, verbose=vb).run()
        self.assertLessEqual(diff_T2.outputs.out_diff, 3)
        self.assertLessEqual(diff_PD.outputs.out_diff, 2)

    def test_MUPA(self):
        seq = {'MUPA': {
        'TR':  0.002372,
        'Trf': 0.000012,
        'Tramp': 0.01,
        'FA': 2,
        'SPS': 256,
        'prep': ['inversion', 'delay', 'delay', 'delay', 't2-40', 't2-80', 't2-160'],
        'prep_pulses': {
            'inversion': {'B1x':[357.6,369.6,359.8,326.5,269.7,190.1,90.66,-24.19,-148.9,-276.8,-400,-510.6,-600.6,-662.5,-693.4,-687.6,-639.2,-547.2,-413,-240.5,-36.64,188.8,424.4,657.3,872.9,1057,1197,1280,1297,1241,1109,904,631.3,299.7,-76,-479,-890,-1289,-1654,-1965,-2207,-2364,-2441,-2422,-2301,-2081,-1771,-1379,-924.1,-420.9,111.2,654.8,1193,1709,2192,2631,3020,3356,3637,3868,4050,4190,4294,4369,4420,4452,4471,4477,4474,4459,4432,4387,4320,4226,4098,3929,3714,3449,3130,2758,2334,1863,1356,823.6,279.8,-257.7,-771.9,-1244,-1657,-1994,-2243,-2395,-2446,-2395,-2265,-2049,-1757,-1407,-1016,-606.8,-199.2,186.9,533.9,826,1053,1208,1288,1293,1229,1106,934.2,726.8,497.7,261.5,31.6,-180.2,-363.2,-509.8,-615.3,-677.3,-696.2,-674.8,-623.2,-541.2,-436.2,-316,-188.6,-62.2,56.39,161.2,247.2,311.3,352,369,363.6,0],'B1y':[-21.94,66.96,160.5,253.2,339.5,413.1,468,499.3,502.9,475.5,415.5,323.9,203.4,58.42,-75.17,-248,-422.4,-588,-734,-849.4,-924.1,-950.6,-922.8,-837.4,-693.5,-495.2,-249.8,32.89,339.7,655,961.5,1241,1477,1653,1754,1770,1697,1531,1274,935.4,528.3,67.9,-324.3,-834.2,-1340,-1823,-2261,-2639,-2942,-3163,-3297,-3342,-3302,-3184,-2999,-2759,-2477,-2168,-1845,-1522,-1209,-918.7,-658.1,-434.7,-253.7,-119.5,-34.88,-1.288,-18.78,-87.53,-206.8,-373.8,-584.4,-834,-1116,-1423,-1744,-2068,-2383,-2675,-2929,-3133,-3273,-3339,-3320,-3214,-3020,-2742,-2386,-1964,-1494,-992.9,-481.8,5.219,390,815.5,1177,1460,1655,1757,1768,1693,1539,1320,1052,752.1,437.6,126.5,-165.3,-423.6,-637.4,-798.8,-902.3,-948,-937.9,-877.5,-773.6,-636,-475.4,-302.5,-128.1,9.346,160.6,289.4,390.4,460.4,497.7,503.6,480.6,432.5,364,281,189.7,95.77,4.846,0],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,30000]},
            't2-40': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,16250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,16250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            't2-80': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            't2-160': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,76250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,76250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            'delay': {'B1x': [0], 'B1y':[0], 'timestep':[0]}
        }}}
        sim_file = 'sim_mupa.nii.gz'
        img_sz = [16, 16, 16]
        noise = 0.01

        NewImage(img_size=img_sz, grad_dim=0, grad_vals=(80, 120),
                 out_file='PD.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=0, grad_vals=(0.8, 3.0),
                 out_file='T1.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=0, grad_vals=(0.04, 1.0),
                 out_file='T2.nii.gz', verbose=vb).run()

        MUPASim(sequence=seq, in_file=sim_file,
                PD='PD.nii.gz', T1='T1.nii.gz', T2='T2.nii.gz',
                noise=noise, verbose=vb).run()
        MUPA(sequence=seq, in_file=sim_file, verbose=vb, threads=-1).run()

        diff_T2 = Diff(in_file='MUPA_T2.nii.gz', baseline='T2.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_PD = Diff(in_file='MUPA_PD.nii.gz', baseline='PD.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_T1 = Diff(in_file='MUPA_T1.nii.gz', baseline='T1.nii.gz',
                       noise=noise, verbose=vb).run()

        self.assertLessEqual(diff_PD.outputs.out_diff, 10)
        self.assertLessEqual(diff_T1.outputs.out_diff, 10)
        self.assertLessEqual(diff_T2.outputs.out_diff, 12)

    def test_MUPAMT(self):
        seq = {'MUPA': {
        'TR':  2.4e-3,
        'Trf': 8e-6,
        'Tramp': 10e-3,
        'FA': 2,
        'SPS': 256,
        'prep': ['inversion', 'delay', 'delay', 'delay', 't2-40', 't2-80', 't2-160'],
        'prep_pulses': {
            'inversion': {'B1x':[357.6,369.6,359.8,326.5,269.7,190.1,90.66,-24.19,-148.9,-276.8,-400,-510.6,-600.6,-662.5,-693.4,-687.6,-639.2,-547.2,-413,-240.5,-36.64,188.8,424.4,657.3,872.9,1057,1197,1280,1297,1241,1109,904,631.3,299.7,-76,-479,-890,-1289,-1654,-1965,-2207,-2364,-2441,-2422,-2301,-2081,-1771,-1379,-924.1,-420.9,111.2,654.8,1193,1709,2192,2631,3020,3356,3637,3868,4050,4190,4294,4369,4420,4452,4471,4477,4474,4459,4432,4387,4320,4226,4098,3929,3714,3449,3130,2758,2334,1863,1356,823.6,279.8,-257.7,-771.9,-1244,-1657,-1994,-2243,-2395,-2446,-2395,-2265,-2049,-1757,-1407,-1016,-606.8,-199.2,186.9,533.9,826,1053,1208,1288,1293,1229,1106,934.2,726.8,497.7,261.5,31.6,-180.2,-363.2,-509.8,-615.3,-677.3,-696.2,-674.8,-623.2,-541.2,-436.2,-316,-188.6,-62.2,56.39,161.2,247.2,311.3,352,369,363.6,0],'B1y':[-21.94,66.96,160.5,253.2,339.5,413.1,468,499.3,502.9,475.5,415.5,323.9,203.4,58.42,-75.17,-248,-422.4,-588,-734,-849.4,-924.1,-950.6,-922.8,-837.4,-693.5,-495.2,-249.8,32.89,339.7,655,961.5,1241,1477,1653,1754,1770,1697,1531,1274,935.4,528.3,67.9,-324.3,-834.2,-1340,-1823,-2261,-2639,-2942,-3163,-3297,-3342,-3302,-3184,-2999,-2759,-2477,-2168,-1845,-1522,-1209,-918.7,-658.1,-434.7,-253.7,-119.5,-34.88,-1.288,-18.78,-87.53,-206.8,-373.8,-584.4,-834,-1116,-1423,-1744,-2068,-2383,-2675,-2929,-3133,-3273,-3339,-3320,-3214,-3020,-2742,-2386,-1964,-1494,-992.9,-481.8,5.219,390,815.5,1177,1460,1655,1757,1768,1693,1539,1320,1052,752.1,437.6,126.5,-165.3,-423.6,-637.4,-798.8,-902.3,-948,-937.9,-877.5,-773.6,-636,-475.4,-302.5,-128.1,9.346,160.6,289.4,390.4,460.4,497.7,503.6,480.6,432.5,364,281,189.7,95.77,4.846,0],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,30000]},
            't2-40': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,16250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,16250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            't2-80': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            't2-160': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,76250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,76250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            'delay': {'B1x': [0], 'B1y':[0], 'timestep':[0]}
        }}}
        sim_file = 'sim_mupa_mt.nii.gz'
        img_sz = [16, 16, 4]
        noise = 0.01

        NewImage(img_size=img_sz, fill=100.0,
                 out_file='PD.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, fill=0.08,
                 out_file='T2_f.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=0, grad_vals=(0.01, 0.15), out_file='f_b.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=1, grad_vals=(0.5, 1.5), out_file='B1.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=2, grad_vals=(0.8, 1.5), out_file='T1_f.nii.gz', verbose=vb).run()

        MUPAMTSim(sequence=seq, in_file=sim_file,
                PD='PD.nii.gz', T1_f='T1_f.nii.gz', T2_f='T2_f.nii.gz', f_b='f_b.nii.gz', B1='B1.nii.gz',
                noise=noise, verbose=vb).run()
        MUPAMT(sequence=seq, in_file=sim_file, verbose=vb, threads=-1).run()

        diff_PD = Diff(in_file='MUPAMT_PD.nii.gz', baseline='PD.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_T1 = Diff(in_file='MUPAMT_T1_f.nii.gz', baseline='T1_f.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_T2 = Diff(in_file='MUPAMT_T2_f.nii.gz', baseline='T2_f.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_f_b = Diff(in_file='MUPAMT_f_b.nii.gz', baseline='f_b.nii.gz', noise=noise, verbose=vb, abs_diff=True).run()
        diff_B1 = Diff(in_file='MUPAMT_B1.nii.gz', baseline='B1.nii.gz', noise=noise, verbose=vb).run()
        self.assertLessEqual(diff_PD.outputs.out_diff, 30)
        self.assertLessEqual(diff_T1.outputs.out_diff, 30)
        self.assertLessEqual(diff_T2.outputs.out_diff, 30)
        self.assertLessEqual(diff_f_b.outputs.out_diff, 30)
        self.assertLessEqual(diff_B1.outputs.out_diff, 30)

    def test_MUPAMT2(self):
        seq = {'MUPA': {
        'TR':  2.4e-3,
        'Trf': 8e-6,
        'Tramp': 10e-3,
        'FA': 2,
        'SPS': 256,
        'prep': ['inversion', 'delay', 'delay', 'delay', 'delay', 't2-80', 'delay', 'delay', 'delay', 'delay'],
        'prep_pulses': {
            'inversion': {'B1x':[357.6,369.6,359.8,326.5,269.7,190.1,90.66,-24.19,-148.9,-276.8,-400,-510.6,-600.6,-662.5,-693.4,-687.6,-639.2,-547.2,-413,-240.5,-36.64,188.8,424.4,657.3,872.9,1057,1197,1280,1297,1241,1109,904,631.3,299.7,-76,-479,-890,-1289,-1654,-1965,-2207,-2364,-2441,-2422,-2301,-2081,-1771,-1379,-924.1,-420.9,111.2,654.8,1193,1709,2192,2631,3020,3356,3637,3868,4050,4190,4294,4369,4420,4452,4471,4477,4474,4459,4432,4387,4320,4226,4098,3929,3714,3449,3130,2758,2334,1863,1356,823.6,279.8,-257.7,-771.9,-1244,-1657,-1994,-2243,-2395,-2446,-2395,-2265,-2049,-1757,-1407,-1016,-606.8,-199.2,186.9,533.9,826,1053,1208,1288,1293,1229,1106,934.2,726.8,497.7,261.5,31.6,-180.2,-363.2,-509.8,-615.3,-677.3,-696.2,-674.8,-623.2,-541.2,-436.2,-316,-188.6,-62.2,56.39,161.2,247.2,311.3,352,369,363.6,0],'B1y':[-21.94,66.96,160.5,253.2,339.5,413.1,468,499.3,502.9,475.5,415.5,323.9,203.4,58.42,-75.17,-248,-422.4,-588,-734,-849.4,-924.1,-950.6,-922.8,-837.4,-693.5,-495.2,-249.8,32.89,339.7,655,961.5,1241,1477,1653,1754,1770,1697,1531,1274,935.4,528.3,67.9,-324.3,-834.2,-1340,-1823,-2261,-2639,-2942,-3163,-3297,-3342,-3302,-3184,-2999,-2759,-2477,-2168,-1845,-1522,-1209,-918.7,-658.1,-434.7,-253.7,-119.5,-34.88,-1.288,-18.78,-87.53,-206.8,-373.8,-584.4,-834,-1116,-1423,-1744,-2068,-2383,-2675,-2929,-3133,-3273,-3339,-3320,-3214,-3020,-2742,-2386,-1964,-1494,-992.9,-481.8,5.219,390,815.5,1177,1460,1655,1757,1768,1693,1539,1320,1052,752.1,437.6,126.5,-165.3,-423.6,-637.4,-798.8,-902.3,-948,-937.9,-877.5,-773.6,-636,-475.4,-302.5,-128.1,9.346,160.6,289.4,390.4,460.4,497.7,503.6,480.6,432.5,364,281,189.7,95.77,4.846,0],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,30000]},
            't2-40': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,16250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,16250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            't2-80': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,36250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            't2-160': {'B1x':[5617,5613,5599,5565,5499,5384,5202,4930,4546,4028,3355,2515,1503,335.4,-951.1,-2289,-3575,-4671,-5409,-5605,-5098,-3795,-1739,817.2,3372,5192,5481,3716,158.2,-3722,-5434,-2986,2339,4778,142.2,-3623,1377,-30.88,0,0,0,-731.9,2646,-119.1,-4305,-2199,2877,5315,3673,-157,-3698,-5465,-5184,-3368,-816.7,1739,3794,5097,5604,5408,4671,3575,2289,951.1,-335.4,-1503,-2515,-3355,-4028,-4546,-4930,-5202,-5384,-5499,-5565,-5599,-5613,-5617,-5618,-5617,-5613,-5599,-5565,-5499,-5384,-5202,-4930,-4546,-4028,-3355,-2515,-1503,-335.4,951.1,2289,3575,4671,5409,5605,5098,3795,1739,-817.2,-3372,-5192,-5481,-3716,-158.2,3722,5434,2986,-2339,-4778,-142.2,3623,-1377,30.88,-0,0,-0,731.9,-2646,119.1,4305,2199,-2877,-5315,-3673,157,3698,5465,5184,3368,816.7,-1739,-3794,-5097,-5604,-5408,-4671,-3575,-2289,-951.1,335.4,1503,2515,3355,4028,4546,4930,5202,5384,5499,5565,5599,5613,5617,5618],'B1y':[76.73,230.3,461,768.2,1151,1604,2123,2694,3300,3916,4506,5024,5413,5608,5537,5131,4334,3121,1518,-373.2,-2358,-4140,-5339,-5553,-4483,-2107,1121,4160,5550,4060,-128.8,-4399,-4557,595.1,4336,-258.1,-2267,1409,0,0,0,1205,188.5,-3630,-536.1,4283,4239,126,-4007,-5506,-4141,-1118,2104,4479,5550,5337,4139,2358,373.2,-1518,-3121,-4334,-5131,-5537,-5608,-5413,-5024,-4506,-3916,-3300,-2694,-2123,-1604,-1151,-768.2,-461,-230.3,-76.73,-9.292E-12,-76.73,-230.3,-461,-768.2,-1151,-1604,-2123,-2694,-3300,-3916,-4506,-5024,-5413,-5608,-5537,-5131,-4334,-3121,-1518,373.2,2358,4140,5339,5553,4483,2107,-1121,-4160,-5550,-4060,128.8,4399,4557,-595.1,-4336,258.1,2267,-1409,0,0,0,-1205,-188.5,3630,536.1,-4283,-4239,-126,4007,5506,4141,1118,-2104,-4479,-5550,-5337,-4139,-2358,-373.2,1518,3121,4334,5131,5537,5608,5413,5024,4506,3916,3300,2694,2123,1604,1151,768.2,461,230.3,76.73,9.064E-12],'timestep':[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,76250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,76250,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64]},
            'delay': {'B1x': [0], 'B1y':[0], 'timestep':[0]}
        }}}
        sim_file = 'sim_mupa_mt.nii.gz'
        img_sz = [16, 16, 4]
        noise = 0.01

        NewImage(img_size=img_sz, fill=100.0,
                 out_file='PD.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, fill=0.08,
                 out_file='T2_f.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=0, grad_vals=(0.01, 0.15), out_file='f_b.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=1, grad_vals=(0.5, 1.5), out_file='B1.nii.gz', verbose=vb).run()
        NewImage(img_size=img_sz, grad_dim=2, grad_vals=(0.8, 1.5), out_file='T1_f.nii.gz', verbose=vb).run()

        MUPAMTSim(sequence=seq, in_file=sim_file,
                PD='PD.nii.gz', T1_f='T1_f.nii.gz', T2_f='T2_f.nii.gz', f_b='f_b.nii.gz', B1='B1.nii.gz',
                noise=noise, verbose=vb).run()
        MUPAMT(sequence=seq, in_file=sim_file, verbose=vb, threads=-1).run()

        diff_PD = Diff(in_file='MUPAMT_PD.nii.gz', baseline='PD.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_T1 = Diff(in_file='MUPAMT_T1_f.nii.gz', baseline='T1_f.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_T2 = Diff(in_file='MUPAMT_T2_f.nii.gz', baseline='T2_f.nii.gz',
                       noise=noise, verbose=vb).run()
        diff_f_b = Diff(in_file='MUPAMT_f_b.nii.gz', baseline='f_b.nii.gz', noise=noise, verbose=vb, abs_diff=True).run()
        diff_B1 = Diff(in_file='MUPAMT_B1.nii.gz', baseline='B1.nii.gz', noise=noise, verbose=vb).run()
        self.assertLessEqual(diff_PD.outputs.out_diff, 30)
        self.assertLessEqual(diff_T1.outputs.out_diff, 30)
        self.assertLessEqual(diff_T2.outputs.out_diff, 30)
        self.assertLessEqual(diff_f_b.outputs.out_diff, 30)
        self.assertLessEqual(diff_B1.outputs.out_diff, 30)

if __name__ == '__main__':
    unittest.main()
